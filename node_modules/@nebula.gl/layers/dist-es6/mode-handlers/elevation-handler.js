"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ElevationHandler = void 0;

var _modeHandler = require("./mode-handler.js");

var _modifyHandler = require("./modify-handler.js");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ElevationHandler =
/*#__PURE__*/
function (_ModifyHandler) {
  _inherits(ElevationHandler, _ModifyHandler);

  function ElevationHandler() {
    _classCallCheck(this, ElevationHandler);

    return _possibleConstructorReturn(this, _getPrototypeOf(ElevationHandler).apply(this, arguments));
  }

  _createClass(ElevationHandler, [{
    key: "makeElevatedEvent",
    value: function makeElevatedEvent(event, position) {
      var _ref = this._modeConfig || {},
          _ref$min = _ref.min,
          min = _ref$min === void 0 ? 0 : _ref$min,
          _ref$max = _ref.max,
          max = _ref$max === void 0 ? 20000 : _ref$max;

      var _this$_context$viewpo = this._context.viewport.project([position[0], position[1], 0]),
          _this$_context$viewpo2 = _slicedToArray(_this$_context$viewpo, 2),
          yBot = _this$_context$viewpo2[1];

      var _this$_context$viewpo3 = this._context.viewport.project([position[0], position[1], 1000]),
          _this$_context$viewpo4 = _slicedToArray(_this$_context$viewpo3, 2),
          yTop = _this$_context$viewpo4[1];

      var _event$screenCoords = _slicedToArray(event.screenCoords, 2),
          y = _event$screenCoords[1];

      var elevation = (yBot - y) * 1000.0 / (yBot - yTop);
      elevation = Math.min(elevation, max);
      elevation = Math.max(elevation, min);
      return Object.assign({}, event, {
        groundCoords: [position[0], position[1], elevation]
      });
    }
  }, {
    key: "handlePointerMove",
    value: function handlePointerMove(event) {
      var editHandle = (0, _modeHandler.getPickedEditHandle)(event.pointerDownPicks);
      var position = editHandle ? editHandle.position : event.groundCoords;
      return _get(_getPrototypeOf(ElevationHandler.prototype), "handlePointerMove", this).call(this, this.makeElevatedEvent(event, position));
    }
  }, {
    key: "handleStopDragging",
    value: function handleStopDragging(event) {
      var editHandle = (0, _modeHandler.getPickedEditHandle)(event.picks);
      var position = editHandle ? editHandle.position : event.groundCoords;
      return _get(_getPrototypeOf(ElevationHandler.prototype), "handleStopDragging", this).call(this, this.makeElevatedEvent(event, position));
    }
  }, {
    key: "getCursor",
    value: function getCursor(params) {
      var cursor = _get(_getPrototypeOf(ElevationHandler.prototype), "getCursor", this).call(this, params);

      if (cursor === 'cell') {
        cursor = 'ns-resize';
      }

      return cursor;
    }
  }]);

  return ElevationHandler;
}(_modifyHandler.ModifyHandler);

exports.ElevationHandler = ElevationHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlLWhhbmRsZXJzL2VsZXZhdGlvbi1oYW5kbGVyLmpzIl0sIm5hbWVzIjpbIkVsZXZhdGlvbkhhbmRsZXIiLCJldmVudCIsInBvc2l0aW9uIiwiX21vZGVDb25maWciLCJtaW4iLCJtYXgiLCJfY29udGV4dCIsInZpZXdwb3J0IiwicHJvamVjdCIsInlCb3QiLCJ5VG9wIiwic2NyZWVuQ29vcmRzIiwieSIsImVsZXZhdGlvbiIsIk1hdGgiLCJPYmplY3QiLCJhc3NpZ24iLCJncm91bmRDb29yZHMiLCJlZGl0SGFuZGxlIiwicG9pbnRlckRvd25QaWNrcyIsIm1ha2VFbGV2YXRlZEV2ZW50IiwicGlja3MiLCJwYXJhbXMiLCJjdXJzb3IiLCJNb2RpZnlIYW5kbGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLGdCOzs7Ozs7Ozs7Ozs7O3NDQUNPQyxLLEVBQTZDQyxRLEVBQTRCO0FBQUEsaUJBQ3hELEtBQUtDLFdBQUwsSUFBb0IsRUFEb0M7QUFBQSwwQkFDakZDLEdBRGlGO0FBQUEsVUFDakZBLEdBRGlGLHlCQUMzRSxDQUQyRTtBQUFBLDBCQUN4RUMsR0FEd0U7QUFBQSxVQUN4RUEsR0FEd0UseUJBQ2xFLEtBRGtFOztBQUFBLGtDQUd4RSxLQUFLQyxRQUFMLENBQWNDLFFBQWQsQ0FBdUJDLE9BQXZCLENBQStCLENBQUNOLFFBQVEsQ0FBQyxDQUFELENBQVQsRUFBY0EsUUFBUSxDQUFDLENBQUQsQ0FBdEIsRUFBMkIsQ0FBM0IsQ0FBL0IsQ0FId0U7QUFBQTtBQUFBLFVBR2hGTyxJQUhnRjs7QUFBQSxtQ0FJeEUsS0FBS0gsUUFBTCxDQUFjQyxRQUFkLENBQXVCQyxPQUF2QixDQUErQixDQUFDTixRQUFRLENBQUMsQ0FBRCxDQUFULEVBQWNBLFFBQVEsQ0FBQyxDQUFELENBQXRCLEVBQTJCLElBQTNCLENBQS9CLENBSndFO0FBQUE7QUFBQSxVQUloRlEsSUFKZ0Y7O0FBQUEsK0NBSzNFVCxLQUFLLENBQUNVLFlBTHFFO0FBQUEsVUFLaEZDLENBTGdGOztBQU96RixVQUFJQyxTQUFTLEdBQUksQ0FBQ0osSUFBSSxHQUFHRyxDQUFSLElBQWEsTUFBZCxJQUF5QkgsSUFBSSxHQUFHQyxJQUFoQyxDQUFoQjtBQUNBRyxNQUFBQSxTQUFTLEdBQUdDLElBQUksQ0FBQ1YsR0FBTCxDQUFTUyxTQUFULEVBQW9CUixHQUFwQixDQUFaO0FBQ0FRLE1BQUFBLFNBQVMsR0FBR0MsSUFBSSxDQUFDVCxHQUFMLENBQVNRLFNBQVQsRUFBb0JULEdBQXBCLENBQVo7QUFFQSxhQUFPVyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCZixLQUFsQixFQUF5QjtBQUM5QmdCLFFBQUFBLFlBQVksRUFBRSxDQUFDZixRQUFRLENBQUMsQ0FBRCxDQUFULEVBQWNBLFFBQVEsQ0FBQyxDQUFELENBQXRCLEVBQTJCVyxTQUEzQjtBQURnQixPQUF6QixDQUFQO0FBR0Q7OztzQ0FFaUJaLEssRUFBNkU7QUFDN0YsVUFBTWlCLFVBQVUsR0FBRyxzQ0FBb0JqQixLQUFLLENBQUNrQixnQkFBMUIsQ0FBbkI7QUFDQSxVQUFNakIsUUFBUSxHQUFHZ0IsVUFBVSxHQUFHQSxVQUFVLENBQUNoQixRQUFkLEdBQXlCRCxLQUFLLENBQUNnQixZQUExRDtBQUNBLHFHQUErQixLQUFLRyxpQkFBTCxDQUF1Qm5CLEtBQXZCLEVBQThCQyxRQUE5QixDQUEvQjtBQUNEOzs7dUNBRWtCRCxLLEVBQXVDO0FBQ3hELFVBQU1pQixVQUFVLEdBQUcsc0NBQW9CakIsS0FBSyxDQUFDb0IsS0FBMUIsQ0FBbkI7QUFDQSxVQUFNbkIsUUFBUSxHQUFHZ0IsVUFBVSxHQUFHQSxVQUFVLENBQUNoQixRQUFkLEdBQXlCRCxLQUFLLENBQUNnQixZQUExRDtBQUNBLHNHQUFnQyxLQUFLRyxpQkFBTCxDQUF1Qm5CLEtBQXZCLEVBQThCQyxRQUE5QixDQUFoQztBQUNEOzs7OEJBRVNvQixNLEVBQXlDO0FBQ2pELFVBQUlDLE1BQU0sbUZBQW1CRCxNQUFuQixDQUFWOztBQUNBLFVBQUlDLE1BQU0sS0FBSyxNQUFmLEVBQXVCO0FBQ3JCQSxRQUFBQSxNQUFNLEdBQUcsV0FBVDtBQUNEOztBQUNELGFBQU9BLE1BQVA7QUFDRDs7OztFQW5DbUNDLDRCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbmltcG9ydCB0eXBlIHsgUG9pbnRlck1vdmVFdmVudCwgU3RvcERyYWdnaW5nRXZlbnQgfSBmcm9tICcuLi9ldmVudC10eXBlcy5qcyc7XG5pbXBvcnQgdHlwZSB7IFBvc2l0aW9uIH0gZnJvbSAnLi4vZ2VvanNvbi10eXBlcy5qcyc7XG5pbXBvcnQgdHlwZSB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL21vZGUtaGFuZGxlci5qcyc7XG5pbXBvcnQgeyBnZXRQaWNrZWRFZGl0SGFuZGxlIH0gZnJvbSAnLi9tb2RlLWhhbmRsZXIuanMnO1xuaW1wb3J0IHsgTW9kaWZ5SGFuZGxlciB9IGZyb20gJy4vbW9kaWZ5LWhhbmRsZXIuanMnO1xuXG5leHBvcnQgY2xhc3MgRWxldmF0aW9uSGFuZGxlciBleHRlbmRzIE1vZGlmeUhhbmRsZXIge1xuICBtYWtlRWxldmF0ZWRFdmVudChldmVudDogUG9pbnRlck1vdmVFdmVudCB8IFN0b3BEcmFnZ2luZ0V2ZW50LCBwb3NpdGlvbjogUG9zaXRpb24pOiBPYmplY3Qge1xuICAgIGNvbnN0IHsgbWluID0gMCwgbWF4ID0gMjAwMDAgfSA9IHRoaXMuX21vZGVDb25maWcgfHwge307XG5cbiAgICBjb25zdCBbLCB5Qm90XSA9IHRoaXMuX2NvbnRleHQudmlld3BvcnQucHJvamVjdChbcG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdLCAwXSk7XG4gICAgY29uc3QgWywgeVRvcF0gPSB0aGlzLl9jb250ZXh0LnZpZXdwb3J0LnByb2plY3QoW3Bvc2l0aW9uWzBdLCBwb3NpdGlvblsxXSwgMTAwMF0pO1xuICAgIGNvbnN0IFssIHldID0gZXZlbnQuc2NyZWVuQ29vcmRzO1xuXG4gICAgbGV0IGVsZXZhdGlvbiA9ICgoeUJvdCAtIHkpICogMTAwMC4wKSAvICh5Qm90IC0geVRvcCk7XG4gICAgZWxldmF0aW9uID0gTWF0aC5taW4oZWxldmF0aW9uLCBtYXgpO1xuICAgIGVsZXZhdGlvbiA9IE1hdGgubWF4KGVsZXZhdGlvbiwgbWluKTtcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBldmVudCwge1xuICAgICAgZ3JvdW5kQ29vcmRzOiBbcG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdLCBlbGV2YXRpb25dXG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVQb2ludGVyTW92ZShldmVudDogUG9pbnRlck1vdmVFdmVudCk6IHsgZWRpdEFjdGlvbjogP0VkaXRBY3Rpb24sIGNhbmNlbE1hcFBhbjogYm9vbGVhbiB9IHtcbiAgICBjb25zdCBlZGl0SGFuZGxlID0gZ2V0UGlja2VkRWRpdEhhbmRsZShldmVudC5wb2ludGVyRG93blBpY2tzKTtcbiAgICBjb25zdCBwb3NpdGlvbiA9IGVkaXRIYW5kbGUgPyBlZGl0SGFuZGxlLnBvc2l0aW9uIDogZXZlbnQuZ3JvdW5kQ29vcmRzO1xuICAgIHJldHVybiBzdXBlci5oYW5kbGVQb2ludGVyTW92ZSh0aGlzLm1ha2VFbGV2YXRlZEV2ZW50KGV2ZW50LCBwb3NpdGlvbikpO1xuICB9XG5cbiAgaGFuZGxlU3RvcERyYWdnaW5nKGV2ZW50OiBTdG9wRHJhZ2dpbmdFdmVudCk6ID9FZGl0QWN0aW9uIHtcbiAgICBjb25zdCBlZGl0SGFuZGxlID0gZ2V0UGlja2VkRWRpdEhhbmRsZShldmVudC5waWNrcyk7XG4gICAgY29uc3QgcG9zaXRpb24gPSBlZGl0SGFuZGxlID8gZWRpdEhhbmRsZS5wb3NpdGlvbiA6IGV2ZW50Lmdyb3VuZENvb3JkcztcbiAgICByZXR1cm4gc3VwZXIuaGFuZGxlU3RvcERyYWdnaW5nKHRoaXMubWFrZUVsZXZhdGVkRXZlbnQoZXZlbnQsIHBvc2l0aW9uKSk7XG4gIH1cblxuICBnZXRDdXJzb3IocGFyYW1zOiB7IGlzRHJhZ2dpbmc6IGJvb2xlYW4gfSk6IHN0cmluZyB7XG4gICAgbGV0IGN1cnNvciA9IHN1cGVyLmdldEN1cnNvcihwYXJhbXMpO1xuICAgIGlmIChjdXJzb3IgPT09ICdjZWxsJykge1xuICAgICAgY3Vyc29yID0gJ25zLXJlc2l6ZSc7XG4gICAgfVxuICAgIHJldHVybiBjdXJzb3I7XG4gIH1cbn1cbiJdfQ==