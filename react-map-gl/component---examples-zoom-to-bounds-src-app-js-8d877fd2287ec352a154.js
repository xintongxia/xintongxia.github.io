(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"/rf6":function(e,t,r){"use strict";function n(e,t,r){void 0===r&&(r={});var n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function o(e,t,r){return void 0===r&&(r={}),n({type:"Point",coordinates:e},t,r)}function i(e,t,r){void 0===r&&(r={});for(var o=0,i=e;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return n({type:"Polygon",coordinates:e},t,r)}function a(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:e},t,r)}function s(e,t){void 0===t&&(t={});var r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function u(e,t,r){return void 0===r&&(r={}),n({type:"MultiLineString",coordinates:e},t,r)}function l(e,t,r){return void 0===r&&(r={}),n({type:"MultiPoint",coordinates:e},t,r)}function c(e,t,r){return void 0===r&&(r={}),n({type:"MultiPolygon",coordinates:e},t,r)}function f(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e*n}function d(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e/n}function g(e){return 180*(e%(2*Math.PI))/Math.PI}function h(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)&&!/^\s*$/.test(e)}r("sc67"),r("JHok"),r("MIFh"),r("AqHK"),r("R48M"),Object.defineProperty(t,"__esModule",{value:!0}),t.earthRadius=6371008.8,t.factors={centimeters:100*t.earthRadius,centimetres:100*t.earthRadius,degrees:t.earthRadius/111325,feet:3.28084*t.earthRadius,inches:39.37*t.earthRadius,kilometers:t.earthRadius/1e3,kilometres:t.earthRadius/1e3,meters:t.earthRadius,metres:t.earthRadius,miles:t.earthRadius/1609.344,millimeters:1e3*t.earthRadius,millimetres:1e3*t.earthRadius,nauticalmiles:t.earthRadius/1852,radians:1,yards:t.earthRadius/1.0936},t.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/t.earthRadius,yards:1/1.0936},t.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},t.feature=n,t.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return o(t).geometry;case"LineString":return a(t).geometry;case"Polygon":return i(t).geometry;case"MultiPoint":return l(t).geometry;case"MultiLineString":return u(t).geometry;case"MultiPolygon":return c(t).geometry;default:throw new Error(e+" is invalid")}},t.point=o,t.points=function(e,t,r){return void 0===r&&(r={}),s(e.map((function(e){return o(e,t)})),r)},t.polygon=i,t.polygons=function(e,t,r){return void 0===r&&(r={}),s(e.map((function(e){return i(e,t)})),r)},t.lineString=a,t.lineStrings=function(e,t,r){return void 0===r&&(r={}),s(e.map((function(e){return a(e,t)})),r)},t.featureCollection=s,t.multiLineString=u,t.multiPoint=l,t.multiPolygon=c,t.geometryCollection=function(e,t,r){return void 0===r&&(r={}),n({type:"GeometryCollection",geometries:e},t,r)},t.round=function(e,t){if(void 0===t&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r},t.radiansToLength=f,t.lengthToRadians=d,t.lengthToDegrees=function(e,t){return g(d(e,t))},t.bearingToAzimuth=function(e){var t=e%360;return t<0&&(t+=360),t},t.radiansToDegrees=g,t.degreesToRadians=function(e){return e%360*Math.PI/180},t.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(e>=0))throw new Error("length must be a positive number");return f(d(e,t),r)},t.convertArea=function(e,r,n){if(void 0===r&&(r="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=t.areaFactors[r];if(!o)throw new Error("invalid original units");var i=t.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i},t.isNumber=h,t.isObject=function(e){return!!e&&e.constructor===Object},t.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!h(e))throw new Error("bbox must only contain numbers")}))},t.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")},t.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},t.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},t.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},t.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},t.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},t.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},t.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}},"1jwa":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return d})),r.d(t,"renderToDom",(function(){return g}));r("E5k/");var n=r("mXGw"),o=r("xARA"),i=r("+qjn"),a=r("QJ+7"),s=r.n(a);var u=function(e){var t,r;function o(){return e.apply(this,arguments)||this}return r=e,(t=o).prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r,o.prototype.render=function(){return n.createElement("div",{className:"control-panel"},n.createElement("h3",null,"Zoom to Bounding Box"),n.createElement("p",null,"Click on a San Fransisco Neighborhood to zoom in."),n.createElement("div",{className:"source-link"},n.createElement("a",{href:"https://github.com/visgl/react-map-gl/tree/5.2-release/examples/zoom-to-bounds",target:"_new"},"View Code â†—")))},o}(n.PureComponent),l=r("fjjH"),c=Object.assign(Object.assign({},l),{},{sources:Object.assign({},l.sources),layers:l.layers.slice()});c.sources["sf-neighborhoods"]={type:"geojson",data:"https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/feature-example-sf.json"},c.layers.push({id:"sf-neighborhoods-fill",source:"sf-neighborhoods",type:"fill",paint:{"fill-outline-color":"#0040c8","fill-color":"#fff","fill-opacity":0}},{id:"sf-neighborhoods-outline",source:"sf-neighborhoods",type:"line",paint:{"line-width":2,"line-color":"#0080ef"}});var f=c;var d=function(e){var t,r;function o(t){var r;return(r=e.call(this,t)||this)._updateViewport=function(e){r.setState({viewport:e})},r._onClick=function(e){var t=e.features[0];if(t){var n=s()(t),o=n[0],a=n[1],u=n[2],l=n[3],c=new i.WebMercatorViewport(r.state.viewport).fitBounds([[o,a],[u,l]],{padding:40}),f=c.longitude,d=c.latitude,g=c.zoom;r.setState({viewport:Object.assign(Object.assign({},r.state.viewport),{},{longitude:f,latitude:d,zoom:g,transitionInterpolator:new i.LinearInterpolator({around:[e.offsetCenter.x,e.offsetCenter.y]}),transitionDuration:1e3})})}},r.state={viewport:{latitude:37.785164,longitude:-122.4,zoom:11,bearing:0,pitch:0},popupInfo:null},r._map=n.createRef(),r}return r=e,(t=o).prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r,o.prototype.render=function(){var e=this.state.viewport;return n.createElement(i.default,Object.assign({ref:this._map,mapStyle:f,interactiveLayerIds:["sf-neighborhoods-fill"]},e,{width:"100%",height:"100%",onClick:this._onClick,onViewportChange:this._updateViewport,mapboxApiAccessToken:""}),n.createElement(u,{containerComponent:this.props.containerComponent}))},o}(n.Component);function g(e){Object(o.render)(n.createElement(d,null),e)}},"QJ+7":function(e,t,r){"use strict";r("R48M"),Object.defineProperty(t,"__esModule",{value:!0});var n=r("cWyK");t.default=function(e){var t=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,(function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])})),t}},cWyK:function(e,t,r){"use strict";r("R48M"),Object.defineProperty(t,"__esModule",{value:!0});var n=r("/rf6");function o(e,t,r){if(null!==e)for(var n,i,a,s,u,l,c,f,d=0,g=0,h=e.type,m="FeatureCollection"===h,p="Feature"===h,y=m?e.features.length:1,v=0;v<y;v++){u=(f=!!(c=m?e.features[v].geometry:p?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var w=0;w<u;w++){var b=0,P=0;if(null!==(s=f?c.geometries[w]:c)){l=s.coordinates;var E=s.type;switch(d=!r||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===t(l,g,v,b,P))return!1;g++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===t(l[n],g,v,b,P))return!1;g++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(i=0;i<l[n].length-d;i++){if(!1===t(l[n][i],g,v,b,P))return!1;g++}"MultiLineString"===E&&b++,"Polygon"===E&&P++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,i=0;i<l[n].length;i++){for(a=0;a<l[n][i].length-d;a++){if(!1===t(l[n][i][a],g,v,b,P))return!1;g++}P++}b++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(!1===o(s.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function s(e,t){var r,n,o,i,a,s,u,l,c,f,d=0,g="FeatureCollection"===e.type,h="Feature"===e.type,m=g?e.features.length:1;for(r=0;r<m;r++){for(s=g?e.features[r].geometry:h?e.geometry:e,l=g?e.features[r].properties:h?e.properties:{},c=g?e.features[r].bbox:h?e.bbox:void 0,f=g?e.features[r].id:h?e.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,d,l,c,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],d,l,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,d,l,c,f))return!1;d++}}function u(e,t){s(e,(function(e,r,o,i,a){var s,u=null===e?null:e.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==t(n.feature(e,o,{bbox:i,id:a}),r,0)&&void 0}switch(u){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}for(var l=0;l<e.coordinates.length;l++){var c={type:s,coordinates:e.coordinates[l]};if(!1===t(n.feature(c,o),r,l))return!1}}))}function l(e,t){u(e,(function(e,r,i){var a=0;if(e.geometry){var s=e.geometry.type;if("Point"!==s&&"MultiPoint"!==s){var u,l=0,c=0,f=0;return!1!==o(e,(function(o,s,d,g,h){if(void 0===u||r>l||g>c||h>f)return u=o,l=r,c=g,f=h,void(a=0);var m=n.lineString([u,o],e.properties);if(!1===t(m,r,i,h,a))return!1;a++,u=o}))&&void 0}}}))}function c(e,t){if(!e)throw new Error("geojson is required");u(e,(function(e,r,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,o,0,0))return!1;break;case"Polygon":for(var s=0;s<a.length;s++)if(!1===t(n.lineString(a[s],e.properties),r,o,s))return!1}}}))}t.coordEach=o,t.coordReduce=function(e,t,r,n){var i=r;return o(e,(function(e,n,o,a,s){i=0===n&&void 0===r?e:t(i,e,n,o,a,s)}),n),i},t.propEach=i,t.propReduce=function(e,t,r){var n=r;return i(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.featureEach=a,t.featureReduce=function(e,t,r){var n=r;return a(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.coordAll=function(e){var t=[];return o(e,(function(e){t.push(e)})),t},t.geomEach=s,t.geomReduce=function(e,t,r){var n=r;return s(e,(function(e,o,i,a,s){n=0===o&&void 0===r?e:t(n,e,o,i,a,s)})),n},t.flattenEach=u,t.flattenReduce=function(e,t,r){var n=r;return u(e,(function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)})),n},t.segmentEach=l,t.segmentReduce=function(e,t,r){var n=r,o=!1;return l(e,(function(e,i,a,s,u){n=!1===o&&void 0===r?e:t(n,e,i,a,s,u),o=!0})),n},t.lineEach=c,t.lineReduce=function(e,t,r){var n=r;return c(e,(function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)})),n},t.findSegment=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,s=t.segmentIndex||0,u=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),u=u||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":u=u||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var l=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return s<0&&(s=l.length+s-1),n.lineString([l[s],l[s+1]],u,t);case"Polygon":return a<0&&(a=l.length+a),s<0&&(s=l[a].length+s-1),n.lineString([l[a][s],l[a][s+1]],u,t);case"MultiLineString":return i<0&&(i=l.length+i),s<0&&(s=l[i].length+s-1),n.lineString([l[i][s],l[i][s+1]],u,t);case"MultiPolygon":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a),s<0&&(s=l[i][a].length-s-1),n.lineString([l[i][a][s],l[i][a][s+1]],u,t)}throw new Error("geojson is invalid")},t.findPoint=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,s=t.coordIndex||0,u=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),u=u||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":u=u||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var l=r.coordinates;switch(r.type){case"Point":return n.point(l,u,t);case"MultiPoint":return i<0&&(i=l.length+i),n.point(l[i],u,t);case"LineString":return s<0&&(s=l.length+s),n.point(l[s],u,t);case"Polygon":return a<0&&(a=l.length+a),s<0&&(s=l[a].length+s),n.point(l[a][s],u,t);case"MultiLineString":return i<0&&(i=l.length+i),s<0&&(s=l[i].length+s),n.point(l[i][s],u,t);case"MultiPolygon":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a),s<0&&(s=l[i][a].length-s),n.point(l[i][a][s],u,t)}throw new Error("geojson is invalid")}}}]);